cmake_minimum_required(VERSION 3.28)

project(sheila)

add_library(${PROJECT_NAME} SHARED)

target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_23)

file(GLOB PUBLIC_HEADERS "public/*.h")
file(GLOB PRIVATE_MODULES "private/*.ixx")
file(GLOB INTERFACE_HEADERS "interface/*.h")
file(GLOB PUBLIC_MODULES "public/*.ixx")
file(GLOB SOURCES "private/*.cpp")

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} PREFIX "Headers" FILES ${PUBLIC_HEADERS} ${INTERFACE_HEADERS})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} PREFIX "Modules" FILES ${PRIVATE_MODULES} ${PUBLIC_MODULES})
source_group(TREE "${CMAKE_CURRENT_SOURCE_DIR}/private" PREFIX "Sources" FILES ${SOURCES})

target_sources(
  ${PROJECT_NAME}
  PRIVATE FILE_SET ${PROJECT_NAME}_PRIVATE_MODULES TYPE CXX_MODULES FILES ${PRIVATE_MODULES}
  PUBLIC FILE_SET ${PROJECT_NAME}_PUBLIC_MODULES TYPE CXX_MODULES FILES ${PUBLIC_MODULES}
  PRIVATE FILE_SET ${PROJECT_NAME}_PUBLIC_HEADERS TYPE HEADERS FILES ${PUBLIC_HEADERS}
  INTERFACE FILE_SET ${PROJECT_NAME}_INTERFACE_HEADERS TYPE HEADERS FILES ${INTERFACE_HEADERS}
  PRIVATE ${SOURCES}
  )

target_precompile_headers(${PROJECT_NAME} PUBLIC ${PUBLIC_HEADERS} INTERFACE ${INTERFACE_HEADERS})

string(TOUPPER ${PROJECT_NAME} UPPER_PROJECT_NAME)
target_compile_definitions(${PROJECT_NAME} PRIVATE ${UPPER_PROJECT_NAME}_BUILD)

if(MSVC)
  target_compile_options(${PROJECT_NAME} PRIVATE /Zc:preprocessor)
endif()

if(${${PROJECT_NAME}_enable_test})
  target_compile_definitions(${PROJECT_NAME} PRIVATE ${UPPER_PROJECT_NAME}_ENABLE_TEST)
  add_subdirectory("test")
endif()
